name: Release
on:
  push:
    branches: [ main ]
    tags-ignore:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get Project Version from pom.xml
        id: pom-project-version
        uses: entimaniac/read-pom-version-action@1.0.0

      - name: Get Changelog Entry based on pom.xml version
        id: changelog_for_pom_version
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.pom-project-version.outputs.version }}

      - uses: mukunku/tag-exists-action@v1.1.0
        id: tag-for-pom-version
        with:
          tag: OpenKIM-${{ steps.pom-project-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate tag exist
        if: steps.tag-for-pom-version.outputs.exists == 'true'
        run: |
          echo "Tag vor Version (${{ steps.pom-project-version.outputs.version }}) already exist."
          echo "Workflow manualy canceled"
          exit 1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Set up api-telematik
        run: |
          mkdir api/ && cd api/
          git config --global user.email "no_reply@sberg.net"
          git config --global user.name "Release Bot"
          git clone https://github.com/gematik/api-telematik.git

      - name: Build with Maven
        id: build_maven
        run: |
          mvn -B package --file pom.xml
          
      - name: Publish new version
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: sberg-net/openkim
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/openkim-${{ steps.pom-project-version.outputs.version }}.jar
          tag: OpenKIM-${{ steps.pom-project-version.outputs.version }}
          overwrite: false
          body: ${{ steps.changelog_for_pom_version.outputs.changes }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            sbergit/openkim
          tags: |
            type=raw,value=latest
            type=match,pattern=[0-9]+.[0-9]+.[0-9]+,value=v${{ steps.pom-project-version.outputs.version }}
            #type=match,pattern=[0-9]+.[0-9]+,value=v${{ steps.pom-project-version.outputs.version }}
            #type=sha

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
          echo "Tags:      ${{ steps.meta.outputs.tags }}"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: sbergit
          password: ${{ secrets.DOCKER_HUB }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
